
public class Pizza implements PizzaComparable{
	protected ArrayList ingredients = new ArrayList();
	protected Shape pizzaShape;
	protected Money cost;
	protected int calories;
	protected Fraction remaining;
	
	public void setShape(Shape s) { 
		this.pizzaShape = (Shape)s.clone();
	}
	
	public Shape getShape() {
		return (Shape) pizzaShape.clone();
	}
	
	public void setPizzaShape(Shape shp){
		this.pizzaShape = shp;
	}
	public void setRemaining(Fraction f){
		this.remaining = f;
	}
	public double getRemaining(){
		return (this.remaining.getNumerator()/this.remaining.getDenominator()) *this.getShape().getArea();
	}

	public Money getCost(){
		return this.cost;
	}
	public int getCalories(){
		return this.calories;
	}
	
	public int compareTo(Object other) {
		return this.getCost().compareTo(((Pizza) other).getCost());
	}
	@Override
	public int compareToBySize(Object o) {
		if(this.getShape().getArea() > ((Pizza) o).getShape().getArea())
			return 1;
		else if(this.getShape().getArea() == ((Pizza) o).getShape().getArea())
			return 0;
		else return -1;
	}
	@Override
	public int compareToByCalories(Object o) {
		if(this.getCalories() > ((Pizza) o).getCalories())
			return 1;
		else if(this.getCalories() == ((Pizza) o).getCalories())
			return 0;
		else return -1;
	}
	
}
