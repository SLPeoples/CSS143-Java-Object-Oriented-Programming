import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.Serializable;


/**
 * @author Samuel L. Peoples, 1527650
 *
 */
public class Student implements Serializable, Comparable<Student> {
	private double GPA;
	private String name;
	
	public Student(String n, double gpa) {
		name = n;
		GPA = gpa;
	}
	
	public double getGPA(){
		return Math.floor(this.GPA*100)/100;
	}
	
	public String toString(){
		return this.name+", "+this.getGPA();
	}
	
	public static void main(String[] args) throws IOException, ClassNotFoundException {
		/*
		writeObjectToFile();
		Student a = readObjectFromFile();
		if(a != null) {
			System.out.println(a.toString());
		}
		*/
		Student[] students = new Student[10];
		students[0] = new Student("A", 4);
		students[1] = new Student("B", 3.9);
		students[2] = new Student("C", 3.8);
		students[3] = new Student("D", 3.7);
		students[4] = new Student("E", 3.6);
		students[5] = new Student("F", 3.5);
		students[6] = new Student("G", 3.0);
		students[7] = new Student("H", 2.553);
		students[8] = new Student("I", 2.0);
		students[9] = new Student("J", 2.11);
		for(Student student: students)
			System.out.println(student.toString());
		System.out.println(students[0].compareTo(students[1]));
		
		
	}

	private static Student readObjectFromFile() throws FileNotFoundException, IOException, ClassNotFoundException {
		ObjectInputStream is = new ObjectInputStream(new FileInputStream("data.obj"));
		Student one = (Student) is.readObject();
	
		is.close();
		
		return one;
	}

	private static void writeObjectToFile() throws FileNotFoundException, IOException {
		Student nguyen = new Student("Nguyen", 3.5);

		ObjectOutputStream os = new ObjectOutputStream(new FileOutputStream("data.obj"));
		os.writeObject(nguyen);
			
		os.close();		
	}

	@Override
	public int compareTo(Student other) {
		return (int)((this.getGPA()-other.getGPA()));
	}

}
